name: TEST-E2E

on: [pull_request]

jobs:
  prepare-tests:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{steps.get_tags.outputs.result}}
      containers: ${{ steps.get_containers.outputs.result}}

    steps:
      - name: Get tags
        id: get_tags
        uses: actions/github-script@v6
        env:
          pullRequestBody: ${{ github.event.pull_request.body }}
        with:
          result-encoding: string
          script: |
            const { pullRequestBody } = process.env
            const tags = ["@critical"];
            try{
              const removedPullRequestBodyBeforeTests = pullRequestBody.split(`### Do you want to run more stable tests?`);
              const removedPullRequestBodyAfterTests = removedPullRequestBodyBeforeTests[1].split(`CONTAINERS`);
              let tagsInString = removedPullRequestBodyAfterTests[0];
              tagsInString = tagsInString.split('\n');
              tagsInString.forEach(line => {
                if (line.includes('[x]')) tags.push(line.replace(/[0-9]+\. \[x\] /, "@stable+@"))
              });
              const tagsToReturn = tags.join(",").toString();
              return tagsToReturn.replace(/\r/g, '')
            }catch{
              return '@critical'
            }

      - name: get-containers
        id: get_containers
        uses: actions/github-script@v6
        env:
          pullRequestBody: ${{ github.event.pull_request.body }}
        with:
          script: |
            const { pullRequestBody } = process.env
            const containers = [];
              const numberOfContainersRegex = /CONTAINERS=(\d*)/
              const numberOfContainers = pullRequestBody.match(numberOfContainersRegex);
              for(let i=1; i<=numberOfContainers[1]; i++){
                containers.push(i)
              }
            return {"containers": containers}

      - name: echo-tags
        run: |
          echo "${{steps.get_tags.outputs.result}}"

  cypress-run-selected:
    runs-on: ubuntu-latest
    needs: [prepare-tests]
    container: cypress/browsers:node14.16.0-chrome89-ff86
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix: ${{ fromJson(needs.prepare-tests.outputs.containers) }}

    steps:
      - name: Wait for Deploy and tests
        uses: lewagon/wait-on-check-action@0179dfc359f90a703c41240506f998ee1603f9ea # v1.0.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          running-workflow-name: e2e
          check-name: deploy
          wait-interval: 10

      - name: Checkout
        uses: actions/checkout@v1

      - uses: rlespinasse/github-slug-action@e4699e49fcf890a3172a02c56ba78d867dbb9fd5 # 3.1.0

      - name: Set domain
        id: set-domain
        run: |
          echo "::set-output name=domain::${{ env.GITHUB_HEAD_REF_SLUG_URL }}.dashboard.saleor.rocks"
      - name: Get API_URI
        id: api_uri
        # Search for API_URI in PR description and use default if not defined
        env:
          pull_request_body: ${{ github.event.pull_request.body }}
          prefix: API_URI=
          pattern: (http|https)://[a-zA-Z0-9.-]+/graphql/?
          fallback_uri: ${{ secrets.CYPRESS_API_URI }}
        run: |
          echo "::set-output name=custom_api_uri::$(echo "$pull_request_body" | grep -Eo "$prefix$pattern" | sed "s/$prefix//" | head -n 1 | { read custom_uri; if [ -z "$custom_uri" ]; then echo "$fallback_uri"; else echo "$custom_uri"; fi })"
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-qa-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-qa-${{ env.cache-name }}-
            ${{ runner.os }}-qa-
            ${{ runner.os }}-
      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install

      - name: Cypress run critical
        uses: cypress-io/github-action@v4
        env:
          API_URI: ${{ steps.api_uri.outputs.custom_api_uri }}
          APP_MOUNT_URI: ${{ secrets.APP_MOUNT_URI }}
          CYPRESS_baseUrl: https://${{steps.set-domain.outputs.domain}}
          CYPRESS_USER_NAME: ${{ secrets.CYPRESS_USER_NAME }}
          CYPRESS_SECOND_USER_NAME: ${{ secrets.CYPRESS_SECOND_USER_NAME }}
          CYPRESS_USER_PASSWORD: ${{ secrets.CYPRESS_USER_PASSWORD }}
          CYPRESS_PERMISSIONS_USERS_PASSWORD: ${{ secrets.CYPRESS_PERMISSIONS_USERS_PASSWORD }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          COMMIT_INFO_MESSAGE: Critical tests triggered on PR - ${{ github.ref_name }}
          CYPRESS_grepTags: ${{ needs.prepare-tests.outputs.tags }}
        with:
          parallel: true
          group: "UI - Chrome"
          record: true
          tag: Critical, ${{github.event.action}}
